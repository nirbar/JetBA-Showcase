<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abort" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Authentication" xml:space="preserve">
    <value>Authentication</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Caching0" xml:space="preserve">
    <value>Caching {0}</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelCaption" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CancelNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="CancelPrompt" xml:space="preserve">
    <value>Are you sure you want to cancel?</value>
  </data>
  <data name="CancelYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ChangesWillNotTakeEffectUntilReboot0" xml:space="preserve">
    <value>Changes will not take fffect until you reboot the system</value>
  </data>
  <data name="ClickRepairToRepairOrUninstallToRemoveIt" xml:space="preserve">
    <value>Click 'Repair' to repair {0} or 'Uninstall' to remove it</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="CopyToClipboard" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="DatabaseConnection" xml:space="preserve">
    <value>Database connection</value>
  </data>
  <data name="DbServer" xml:space="preserve">
    <value>Database Server</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ERROR_FAIL_NOACTION_REBOOT_0" xml:space="preserve">
    <value>The installation/removal of a previous program was not completed. You will need to restart your computer to complete that installation.

After restarting your computer, run Setup again to complete the installation of {0}.</value>
  </data>
  <data name="Executing0" xml:space="preserve">
    <value>Executing {0}</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="FailedConnectingToDbServer0" xml:space="preserve">
    <value>Failed connecting to DB server
{0}</value>
  </data>
  <data name="FilesInUse" xml:space="preserve">
    <value>Files in Use</value>
  </data>
  <data name="FilesInUseText" xml:space="preserve">
    <value>The following applications are using files that need to be updated by this setup. You can let Setup Wizard close them and attempt to restart them or reboot the machine later.</value>
  </data>
  <data name="GettingReady" xml:space="preserve">
    <value>Getting Ready ...</value>
  </data>
  <data name="HelpPageText" xml:space="preserve">
    <value>/install | /repair | /uninstall | /layout "C:\Users\Me\Desktop\Extract" - installs, repairs, uninstalls or downloads a complete local copy of the bundle in directory. Install is the default.

/passive - Displays minimal UI with no prompts.
/quiet - Displays no UI and no prompts.
By default UI and all prompts are displayed.

/norestart - Suppress any attempts to restart. By default UI will prompt before restart.
/log log.txt - Logs to a specific file. By default a log file is created in %TEMP%.
/language ID - Use the specified language. Example IDs are "en" for English or "he" for Hebrew.
/? - Show this help screen

INSTALL_FOLDER="C:\Program Files\Sample" - Set terget folder</value>
  </data>
  <data name="Ignore" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="Install" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="InstallationFolder" xml:space="preserve">
    <value>Installation folder</value>
  </data>
  <data name="InstallationIsRunningFormat" xml:space="preserve">
    <value>Please wait while {0} is being installed.</value>
  </data>
  <data name="InstallFolder" xml:space="preserve">
    <value>Install Folder</value>
  </data>
  <data name="InterruptedRebootPrompt" xml:space="preserve">
    <value>The machine has restarted. Do you wish to proceed with the operation started before the reboot?</value>
  </data>
  <data name="InvalidCredentials" xml:space="preserve">
    <value>Invalid user name or password</value>
  </data>
  <data name="IS_RIGHT_TO_LEFT" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="LanguageName" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>Modify</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OpenFailureLog" xml:space="preserve">
    <value>Open failure log</value>
  </data>
  <data name="OperationCanceled" xml:space="preserve">
    <value>Installation Aborted</value>
  </data>
  <data name="PackageRetryPromptCaption" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="PageTitle_Database" xml:space="preserve">
    <value>Database connection</value>
  </data>
  <data name="PageTitle_Finish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="PageTitle_InstallLocation" xml:space="preserve">
    <value>Target folder</value>
  </data>
  <data name="PageTitle_PageSelection" xml:space="preserve">
    <value>Select features</value>
  </data>
  <data name="PageTitle_Progress" xml:space="preserve">
    <value>Install progress</value>
  </data>
  <data name="PageTitle_Repair" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="PageTitle_Service" xml:space="preserve">
    <value>Service account</value>
  </data>
  <data name="PageTitle_Summary" xml:space="preserve">
    <value>Ready to install</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PleaseProvideSqlUserName" xml:space="preserve">
    <value>Please provide user name for SQL authentication</value>
  </data>
  <data name="PleasWaitWhileExecuting0" xml:space="preserve">
    <value>Please wait while Windows configures {0}</value>
    <comment>0</comment>
  </data>
  <data name="PreviousVersion" xml:space="preserve">
    <value>Removing older versions of this application...</value>
  </data>
  <data name="ReadyToInstall" xml:space="preserve">
    <value>Please review parameters and click 'Install' when ready</value>
  </data>
  <data name="Repair" xml:space="preserve">
    <value>Repair</value>
  </data>
  <data name="Restart" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="SelectInstallationPages" xml:space="preserve">
    <value>Select Pages for the Installation Wizard</value>
  </data>
  <data name="ServiceAccount" xml:space="preserve">
    <value>Service account</value>
  </data>
  <data name="ShellExecuteFailedTextFormat" xml:space="preserve">
    <value>Unable to execute file:
{0}</value>
  </data>
  <data name="SqlAuthentication" xml:space="preserve">
    <value>SQL</value>
  </data>
  <data name="Uninstall" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="ValidationPromptCancel" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="ValidationPromptContinue" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="ValidationPromptOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="WeNeedToRebootNow_0WillContinueAfterYouLoginAgain" xml:space="preserve">
    <value>We need to reboot the machine now.
{0} will continue after you login again</value>
  </data>
  <data name="WindowsAuthentication" xml:space="preserve">
    <value>Windows</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="_0InstallFolder" xml:space="preserve">
    <value>{0} install folder</value>
  </data>
  <data name="_0IsNotALegalFolderName" xml:space="preserve">
    <value>'{0}' is not a legal folder name</value>
  </data>
  <data name="_0IsReadyForUse" xml:space="preserve">
    <value>{0} is ready for use</value>
  </data>
  <data name="_0SetupFailed" xml:space="preserve">
    <value>{0} Setup failed</value>
  </data>
  <data name="_0SuccessfullyFinished" xml:space="preserve">
    <value>{0} Setup completed successfully.</value>
  </data>
</root>