<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:util="clr-namespace:PanelSW.Installer.JetBA.Util;assembly=PanelSW.Installer.JetBA"
    >
    
    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <util:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <util:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
    <util:EnumBooleanConverter x:Key="EnumBooleanConverter" />

    <!-- Geometry -->
    <StreamGeometry x:Key="NarrowXSign">M1.4139998,0 C1.4139998,-1.1920929E-07 2.806,1.3919997 4.5459998,3.1319997 L5.6569998,4.2429998 6.7679999,3.1319997 C8.5079997,1.3919997 9.8999999,-1.1920929E-07 9.8999999,0 9.8999999,-1.1920929E-07 11.313999,1.4139998 11.313999,1.4139998 11.313999,1.4139998 9.9220002,2.806 8.1819994,4.5459998 L7.0709994,5.6569998 8.1819994,6.7679999 C9.9220002,8.5079997 11.313999,9.8999999 11.313999,9.8999999 11.313999,9.8999999 9.8999999,11.313999 9.8999999,11.313999 9.8999999,11.313999 8.5079997,9.9220002 6.7679999,8.1819994 L5.6569998,7.0709994 4.5459998,8.1819994 C2.806,9.9220002 1.4139998,11.313999 1.4139998,11.313999 1.4139998,11.313999 -1.1920929E-07,9.8999999 0,9.8999999 -1.1920929E-07,9.8999999 1.3919997,8.5079997 3.1319997,6.7679999 L4.2429998,5.6569998 3.1319997,4.5459998 C1.3919997,2.806 -1.1920929E-07,1.4139998 0,1.4139998 -1.1920929E-07,1.4139998 1.4139998,-1.1920929E-07 1.4139998,0 z</StreamGeometry>
    <StreamGeometry x:Key="CheckMark">F1M9.567,1.494C9.924,1.473 10.29,1.588 10.579,1.844 11.158,2.358 11.211,3.242 10.698,3.821 10.698,3.821 7.178,9.561 7.178,9.561L7.157,9.571 7.121,9.644 6.737,9.775 6.215,10.029C5.857,10.05,5.491,9.936,5.202,9.679L5.109,9.487 4.634,9.066C3.715,8.251 1.877,6.62 1.877,6.62 1.366,6.04 1.422,5.155 2.002,4.644 2.582,4.134 3.467,4.19 3.978,4.77 3.978,4.77 4.795,5.495 5.613,6.219L5.859,6.438 6.844,4.832C7.723,3.398 8.603,1.963 8.603,1.963 8.859,1.674 9.209,1.516 9.567,1.494z</StreamGeometry>

    <!-- Brushes -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="White" />

    <SolidColorBrush x:Key="TitleBackgroundBrush" Color="#424242" /> <!-- dark gray -->

    <SolidColorBrush x:Key="WindowFrameBackgrdBrush" Color="#A8A8A8" /> <!-- light gray -->

    <SolidColorBrush x:Key="ButtonBackgrdBrush" Color="#F3F3F3" />

    <SolidColorBrush x:Key="ForegroundBrush" Color="Black" />

    <!-- Control Templates -->

    <ControlTemplate x:Key="ButtonTemplateKey" TargetType="{x:Type Button}">
        <Grid x:Name="ButtonGrid">
            <Rectangle Fill="{TemplateBinding Button.Background}" Stroke="{StaticResource WindowFrameBackgrdBrush}" 
				StrokeThickness="1" RadiusX="2" RadiusY="2" />
            <Rectangle x:Name="HighlightRectangle" Fill="#44FFFFFF" Visibility="Hidden" IsHitTestVisible="False"/>
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Button.Content}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="ButtonGrid" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX=".96" ScaleY=".96" />
                            <TranslateTransform X="2" Y="2"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="HighlightRectangle" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DarkGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CheckboxTemplate" TargetType="{x:Type CheckBox}">
        <Grid Height="20" MinWidth="50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.1"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFCDDEE5"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid Grid.Column="0" Width="17" Height="17" VerticalAlignment="Center">
                <Rectangle x:Name="Background" 
					RadiusX="1" RadiusY="1" Fill="White"
					Stroke="{StaticResource WindowFrameBackgrdBrush}" StrokeThickness="1"
					/>
                <Path 
					x:Name="CheckMark" 
					Data="{StaticResource CheckMark}" 
					HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight"
					Width="13" Height="12" Fill="#95bd45" Opacity="0"
					/>
            </Grid>

            <ContentPresenter
				Grid.Column="1"
				TextElement.Foreground="{TemplateBinding Foreground}"
				TextElement.FontSize="11" 
				Content="{TemplateBinding Content}"
				HorizontalAlignment="Left" VerticalAlignment="Center" 
				Margin="6,0,0,0"
				/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Styles -->
    <Style x:Key="LinkTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgrdBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="8,0,8,0"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplateKey}"/>
    </Style>

    <Style x:Key="DialogButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="8,0,8,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="btn" CornerRadius="4" Height="24" Width="70" BorderBrush="Black" BorderThickness="1">
                        <TextBlock Name="txt" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black" Background="Transparent" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btn" Property="Background" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="btn" Property="Background" Value="#f7f6f6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btn" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter TargetName="txt" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LinkButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#241E1A"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="8,0,8,0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{TemplateBinding Content}" Style="{StaticResource LinkTextBlockStyle}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0" Height="24" Width="70" Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMouseOver}" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource CheckboxTemplate}"/>
    </Style>

    <Style TargetType="Image">
        <Setter Property="Height" Value="60"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="RenderTransformOrigin" Value=".5,.5" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="5,2,5,2"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="5,2,5,2"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="5,2,5,2"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style TargetType="TextBlock" x:Key="GenericText">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="TextBlock" x:Key="HeaderText">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="TextBlock" x:Key="TitleText">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontStyle" Value="Oblique"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="Label">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="StatusTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="Foreground" Value="#FF1E7DF7" />
        <Setter Property="Background" Value="#FFB4CDED" />
        <Setter Property="Height" Value="15"/>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="Margin" Value="5,2,5,2"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    
    <!-- Window buttons -->
    <ControlTemplate x:Key="CloseButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Grid Background="Transparent">
                <Path Data="{StaticResource NarrowXSign}" 
					Fill="{TemplateBinding Foreground}"
					HorizontalAlignment="Center" 
					VerticalAlignment="Center" 
					Stretch="Uniform"
					/>
                <ContentPresenter 
					VerticalAlignment="Center" 
					HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"
					/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Template" Value="{StaticResource CloseButtonTemplate}"/>
    </Style>

    <ControlTemplate x:Key="MinimizeButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Grid Background="Transparent">
                <Rectangle Height="2" 
					Fill="{TemplateBinding Foreground}"
					VerticalAlignment="Bottom"
					/>
                <ContentPresenter 
					VerticalAlignment="Center" 
					HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"
					/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Template" Value="{StaticResource MinimizeButtonTemplate}"/>
    </Style>
</ResourceDictionary>
